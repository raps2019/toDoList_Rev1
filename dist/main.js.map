{"version":3,"sources":["webpack://to_do_list/./src/index.js","webpack://to_do_list/./src/modules/drawAddNewButtons.js","webpack://to_do_list/./src/modules/drawForms.js","webpack://to_do_list/./src/modules/listFactory.js","webpack://to_do_list/./src/modules/taskFactory.js","webpack://to_do_list/webpack/bootstrap","webpack://to_do_list/webpack/runtime/define property getters","webpack://to_do_list/webpack/runtime/hasOwnProperty shorthand","webpack://to_do_list/webpack/runtime/make namespace object","webpack://to_do_list/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAC+C;AACA;;AAE/C;AACmF;AAC7B;;AAEtD;;AAEA;AACA;AACA;;AAEA,8BAA8B,6EAAiB;AAC/C,8BAA8B,6EAAiB;;AAE/C;AACA;AACA;AACA,0CAA0C,mEAAe;AACzD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,I;;;;;;;;;;;;;;;AC7BD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAKC;;;;;;;;;;;;;;;AC/BD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACzB3B;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,WAAW,EAAC;;;;;;;;UCnD3B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["//Import Factory Functions\r\nimport taskFactory from './modules/taskFactory'\r\nimport listFactory from './modules/listFactory'\r\n\r\n//Import DOM Manipulation Functions\r\nimport { drawNewListButton, drawNewTaskButton } from './modules/drawAddNewButtons';\r\nimport { drawNewListForm } from './modules/drawForms';\r\n\r\nconsole.log('This should work')\r\n\r\nconst runApp = (() => {\r\n    const listContainer = document.querySelector('#listContainer');\r\n    const taskContainer = document.querySelector('#taskContainer')\r\n\r\n    listContainer.appendChild(drawNewListButton());\r\n    taskContainer.appendChild(drawNewTaskButton());\r\n\r\n    document.addEventListener('click',function(e) {\r\n        if(e.target.id === \"newListButton\" || e.target.id === \"cancelListFormButton\") {\r\n            if(e.target.parentNode.classList.contains('new-list-form-active') === false) {\r\n                listContainer.appendChild(drawNewListForm());\r\n                e.target.parentNode.classList.add('new-list-form-active')\r\n            } else {\r\n                e.target.parentNode.classList.remove('new-list-form-active')\r\n                console.log(e.target.parentNode.parentNode)\r\n                document.getElementById('newListFormContainer').remove();\r\n            }\r\n        }\r\n    })\r\n})();","const drawNewListButton = () => {\r\n    let div = document.createElement('div');\r\n    div.setAttribute('id','newListButtonContainer');\r\n\r\n    let button = document.createElement('button');\r\n    button.setAttribute('id','newListButton');\r\n    button.setAttribute('class','new-list-button');\r\n    button.innerHTML = '+ Add New List'\r\n\r\n    div.appendChild(button);\r\n\r\n    return div;\r\n}\r\n\r\nconst drawNewTaskButton = () => {\r\n    let div = document.createElement('div');\r\n    div.setAttribute('id','newTaskButtonContainer');\r\n\r\n    let button = document.createElement('button');\r\n    button.setAttribute('id','newTaskButton');\r\n    button.setAttribute('class','new-task-button');\r\n    button.innerHTML = '+ Add New Task'\r\n\r\n    div.appendChild(button);\r\n\r\n    return div;\r\n}\r\n\r\nexport {\r\n    drawNewListButton,\r\n    drawNewTaskButton,\r\n}\r\n","const drawNewListForm = () => {\r\n    let div = document.createElement('div');\r\n    div.id = \"newListFormContainer\"\r\n\r\n    let input = document.createElement('input');\r\n    input.placeholder = 'Enter List Name';\r\n    input.name = 'listName';\r\n    input.className = 'new-list-input'\r\n\r\n    let submitButton = document.createElement('button');\r\n    submitButton.id = 'submitListButton';\r\n    submitButton.className = 'submit-list-button';\r\n    submitButton.innerHTML = 'Add';\r\n\r\n    let cancelButton = document.createElement('button');\r\n    cancelButton.id = 'cancelListFormButton';\r\n    cancelButton.className = 'cancel-list-form-button';\r\n    cancelButton.innerHTML = 'Cancel';\r\n    \r\n    div.appendChild(input);\r\n    div.appendChild(submitButton);\r\n    div.appendChild(cancelButton);\r\n\r\n    return div;\r\n}\r\n\r\nexport {\r\n    drawNewListForm,\r\n}","//list Object \r\n\r\n//list Object Prototype\r\nconst listProto = {\r\n    editTitle(newTitle) {\r\n        this.title = newTitle;\r\n    }\r\n}\r\n\r\n//list Object Factory Function\r\nconst listFactory = (title,active) => {\r\n    let list = Object.create(listProto);\r\n\r\n    list.title = title;\r\n    list.id = Date.now().toString();\r\n    list.active = active;\r\n\r\n    return list;\r\n}\r\n\r\n//Add list function (Dont think this is needed)\r\n// const addlist = (listList,title,active) => {\r\n//     listList.push(listFactory(title,active));\r\n// }\r\n\r\nexport default listFactory;\r\n\r\n","//Task Object\r\n\r\n//Task Object Prototype Functions\r\nconst taskProto = {\r\n    editTitle(newTitle) {\r\n        this.title = newTitle;\r\n    },\r\n    editDetails(newDetails) {\r\n        this.details = newDetails;\r\n    },\r\n    editDueDate(newDueDate) {\r\n        this.dueDate = newDueDate;\r\n    },\r\n    editPriority(newPriority) {\r\n        this.priority = newPriority;\r\n    },\r\n    editList(newList) {\r\n        this.list = newList;\r\n    },\r\n    toggleStatus() {\r\n        if (this.completed === false) {\r\n            this.completed = true;\r\n        } else {\r\n            this.completed = false\r\n        }\r\n    },\r\n}\r\n\r\n//Task Factory Function\r\nconst taskFactory = (title,details,dueDate,priority,list,active) => {\r\n\r\n    let task = Object.create(taskProto);\r\n    let completed = false;  \r\n\r\n    task.title = title;\r\n    task.details = details;\r\n    task.dueDate = dueDate;\r\n    task.priority = priority;\r\n    task.list = list;\r\n    task.active = active;\r\n    task.completed = completed;\r\n    task.id = Date.now().toString();\r\n    \r\n    return task;\r\n} \r\n\r\n//Add Task Function (dont think this is need)\r\n// const addTask = (taskList,title,details,dueDate,priority,list) => {\r\n//     taskList.push(taskFactory(title,details,dueDate,priority,list));\r\n// }\r\n\r\nexport default taskFactory;\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}